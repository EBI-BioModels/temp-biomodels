<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Syst Biol</journal-id><journal-title>BMC Systems Biology</journal-title><issn pub-type="epub">1752-0509</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">18373871</article-id><article-id pub-id-type="pmc">2375859</article-id><article-id pub-id-type="publisher-id">1752-0509-2-30</article-id><article-id pub-id-type="doi">10.1186/1752-0509-2-30</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories><title-group><article-title>Optimal enumeration of state space of finitely buffered stochastic molecular networks and exact computation of steady state landscape probability</article-title></title-group><contrib-group><contrib id="A1" contrib-type="author"><name><surname>Cao</surname><given-names>Youfang</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>yfcao@sjtu.edu.cn</email></contrib><contrib id="A2" corresp="yes" contrib-type="author"><name><surname>Liang</surname><given-names>Jie</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I3">3</xref><email>jliang@uic.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Shanghai Center for Systems Biomedicine (SCSB), Shanghai Jiao Tong University, Shanghai, 200240, China</aff><aff id="I2"><label>2</label>Department of Computer Science and Engineering, Shanghai Jiao Tong University, Shanghai, 200240, China</aff><aff id="I3"><label>3</label>Department of Bioengineering, University of Illinois at Chicago, Chicago, IL 60612, USA</aff><pub-date pub-type="collection"><year>2008</year></pub-date><pub-date pub-type="epub"><day>29</day><month>3</month><year>2008</year></pub-date><volume>2</volume><fpage>30</fpage><lpage>30</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1752-0509/2/30"/><history><date date-type="received"><day>12</day><month>2</month><year>2008</year></date><date date-type="accepted"><day>29</day><month>3</month><year>2008</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2008 Cao and Liang; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2008</copyright-year><copyright-holder>Cao and Liang; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Cao
               Youfang
               
               
               yfcao@sjtu.edu.cn
            </dc:author><dc:title>
            Optimal enumeration of state space of finitely buffered stochastic molecular networks and exact computation of steady state landscape probability
         </dc:title><dc:date>2008</dc:date><dcterms:bibliographicCitation>BMC Systems Biology 2(1): 30-. (2008)</dcterms:bibliographicCitation><dc:identifier type="sici">1752-0509(2008)2:1&#x0003c;30&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1752-0509</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>Stochasticity plays important roles in many molecular networks when molecular concentrations are in the range of 0.1 <italic>&#x003bc;</italic>M to 10<italic>n</italic>M (about 100 to 10 copies in a cell). The chemical master equation provides a fundamental framework for studying these networks, and the time-varying landscape probability distribution over the full microstates, <italic>i.e</italic>., the combination of copy numbers of molecular species, provide a full characterization of the network dynamics. A complete characterization of the space of the microstates is a prerequisite for obtaining the full landscape probability distribution of a network. However, there are neither closed-form solutions nor algorithms fully describing all microstates for a given molecular network.</p></sec><sec><title>Results</title><p>We have developed an algorithm that can exhaustively enumerate the microstates of a molecular network of small copy numbers under the condition that the net gain in newly synthesized molecules is smaller than a predefined limit. We also describe a simple method for computing the exact mean or steady state landscape probability distribution over microstates. We show how the full landscape probability for the gene networks of the self-regulating gene and the toggle-switch in the steady state can be fully characterized. We also give an example using the MAPK cascade network. Data and server will be available at URL: <ext-link ext-link-type="uri" xlink:href="http://scsb.sjtu.edu.cn/statespace"/>.</p></sec><sec><title>Conclusion</title><p>Our algorithm works for networks of small copy numbers buffered with a finite copy number of net molecules that can be synthesized, regardless of the reaction stoichiometry, and is optimal in both storage and time complexity. The algorithm can also be used to calculate the rates of all transitions between microstates from given reactions and reaction rates. The buffer size is limited by the available memory or disk storage. Our algorithm is applicable to a class of biological networks when the copy numbers of molecules are small and the network is closed, or the network is open but the net gain in newly synthesized molecules does not exceed a predefined buffer capacity. For these networks, our method allows full stochastic characterization of the mean landscape probability distribution, and the steady state when it exists.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Networks of interacting biomolecules are at the heart of the regulation of cellular processes, and stochasticity plays important roles in many networks, including those responsible for gene regulation, protein synthesis, and signal transduction [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B5">5</xref>]. The stochasticity originates intrinsically from the small copy numbers of the molecular species in a cell, which frequently occur when molecular concentrations are in the range of 0.1 <italic>&#x003bc;</italic>M to 1<italic>n</italic>M (typically from about 100 to 10 copies in a cell) [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B6">6</xref>]. For example, the regulation of transcriptions depends on the binding of often a few proteins to a promoter site; the synthesis of protein peptides on ribosome involves a small copy number of molecules; and patterns of cell differentiation depend on initial small copy number events. In these biological processes, fluctuations due to the stochastic behavior intrinsic in low copy number events play important roles.</p><p>The importance of stochasticity in cellular functions is well recognized. Studies of network models show that stochasticity is important for magnifying signal, sharpening discrimination, and inducing multistability [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B7">7</xref>-<xref ref-type="bibr" rid="B13">13</xref>]. Understanding the stochastic nature and its consequences for cellular processes involving molecular species of small copy numbers in a network is an important problem.</p><p>A fundamental framework for studying the full stochasticity is the chemical master equation [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. Under this framework, the combination of copy numbers of molecular species defines the microscopic state of the molecular interactions in the network. By treating microscopic states of reactants explicitly, linear and nonlinear reactions (such as synthesis, degradation, dimeric binding, and multimerization) can all be effectively modeled as transitions between microstates, with transition rates determined by the physical properties of the molecules and the cell environment. The probability distribution or potential landscape [<xref ref-type="bibr" rid="B16">16</xref>-<xref ref-type="bibr" rid="B18">18</xref>] over these microstates and its time-evolving behavior provide a full description of the properties of a stochastic molecular network.</p><p>However, it is challenging to study a realistic system that involves a nontrivial number of species of small copy numbers. Analytical solutions of the chemical master equation exist only for very simple cases, such as self-regulating genes [<xref ref-type="bibr" rid="B19">19</xref>], and the toggle-switch network under certain restrictions [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B18">18</xref>]. Instead of solving the master equation, a widely used method is to carry out Monte Carlo simulations using the Gillespie algorithm [<xref ref-type="bibr" rid="B14">14</xref>]. This method generates samples from multiple runs of simulation, and statistics properties are calculated from the simulation trajectories, which provide characterizations of the network [<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>]. This approach has found wide applications, although it cannot guarantee a full account of stochasticity, as this method usually does not generate an exhaustive number of trajectories that cover all possible locations in the probability landscape. In addition, as Monte Carlo simulations follow high probability paths, it is especially challenging to sample adequately rare and critical events that may be important in determining cellular fate. It is also difficult to determine whether a simulation is extensive enough to obtain accurate statistics. The amount of computation necessary to obtain an accurate result may be too large to be completed in a reasonable amount of time, especially when the time scales of the various react ions involved are very different [<xref ref-type="bibr" rid="B8">8</xref>]. To address these issues, Gillespie, Petzold, and colleagues further developed numerical methods for speeding up the stochastic simulation [<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>]. Munsky and Khammash developed a method to approximate the solution of chemical master equation by projecting the whole state space of the system to a finite space [<xref ref-type="bibr" rid="B22">22</xref>]. Samant and Vlachos developed a multiscale Monte Carlo method for stiff systems where partial equilibrium occurs [<xref ref-type="bibr" rid="B23">23</xref>]. An alternative approach is to approximate the master equation using, for example, Fokker-Planck or Langevin equations [<xref ref-type="bibr" rid="B15">15</xref>]. These are obtained by adding stochastic terms (often Gaussian) to a deterministic equation [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B18">18</xref>,<xref ref-type="bibr" rid="B24">24</xref>]. Salis and Kaznessis improved the stochastic simulation method by partitioning the system into components with fast and slow reactions. The fast reactions are approximated by the Langevin equations, and the slow reactions are analyzed by stochastic Monte Carlo simulations [<xref ref-type="bibr" rid="B25">25</xref>].</p><p>A complete identification and characterization of the space of the microstates is a prerequisite for obtaining the full landscape probability distribution of a network. However, the state space of a network currently cannot be fully characterized in general. There is neither closed-form solution, nor computational algorithm describing the full state space. In this paper, we study the problem of enumerating the state space of a molecular network with small copy numbers of molecular species.</p><p>A naive method is to predefine the maximum copy number of the reactants, and bound the state space by the product of the maximum numbers. However, the size of state spaces estimated by this naive approach will be inflated to enormity. For example, if there are 16 species, and there is a total a maximum of 33 molecules in the whole system, this naive method does not take into consideration of the details of the network, and the state space will be estimated to be in the order of (33 + 1)<sup>16 </sup>= 3.19 &#x000d7; 10<sup>24 </sup>states. This naive method is intrinsically inefficient: There may be many states which may never occur. For some states, no reactions may occur and therefore are not needed. For others, no reactions can lead to them under the specified initial condition. An alternative approach is carrying out simulation. One can simply follow explicitly simulated reaction events to whatever microstates of copy numbers the system reaches. However, this approach cannot guarantee that all reachable states will be explored, therefore cannot guarantee full characterization of rare events.</p><p>In this study, we develop an optimal algorithm that gives full description of the state space and the set of transitions. Our method works for networks of small copy numbers under the condition that the net gain in newly synthesized molecules in the network does not exceed a predefined finite number. Our algorithm is optimal in both memory requirement and in time complexity. All states reachable from a given initial condition will be accounted for by our method, and no irrelevant states will be included. All possible transitions will be recorded, and no infeasible transitions will be ever attempted. As a result, our algorithm can generate the full state-transition matrix under the framework of the chemical master equation. This matrix is compact without any redundant information. It is also of the minimal size. In addition, the computational time is optimal, up to a constant. We also describe how to obtain the mean landscape probability distribution over the enumerated state space of a network, which is the same as the landscape distribution of the steady state when it exists.</p><p>This paper is organized as follows. We first describe how our method can be applied to the simple examples of a self-regulating gene, a toggle-switch network, and the more complex example of the MAPK network. This is followed by conclusion and discussion. We finally describe the technical details of the algorithm for enumerating the space of microstates, and introduce a simple method for computing the steady state landscape probability distribution.</p></sec><sec><title>Results and Discussion</title><sec><title>Molecular network models</title><p>We apply our algorithm to three network models: the self-regulating gene, the small toggle-switch network, and the MAPK cascade network.</p><sec><title>Self-regulating gene</title><p>Regulating the expression of even a single gene is a complex process. We study the network of an idealized self-regulating gene (Fig <xref ref-type="fig" rid="F1">1a</xref> and <xref ref-type="fig" rid="F1">1b</xref>). As a basic unit in biological genetic networks, it consists of only one gene, and is the simplest molecular network. We follow the study of Schultz <italic>et al </italic>and assume that the dominant form of regulation is the binding and unbinding of transcription factors to the operator site, which changes the rate of transcription initiation [<xref ref-type="bibr" rid="B18">18</xref>]. In this model, there are several stochastic processes: the synthesis and degradation of the protein transcription factor at the reaction rate constants of <italic>s</italic><sub>0 </sub>(or <italic>s</italic><sub>1</sub>) and <italic>d</italic>, respectively, and the binding and unbinding of the operator site of DNA by the transcription factor at the reaction rate constants of <italic>b </italic>and <italic>u</italic>, respectively. These processes are illustrated in Fig <xref ref-type="fig" rid="F1">1b</xref>. The binding state of the operator site is either "on/unbound" (state 1), or "off/bound" (state 0). The synthesis rate of transcription factor is either <italic>s</italic><sub>0 </sub>or <italic>s</italic><sub>1</sub>, depending on the binding state of the operator site.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p>The network of a self-regulating gene. (a) The topology of the network. A single copy of the gene in the chromosome encodes a protein transcription factor (TF), which is synthesized at the rate of <italic>s</italic><sub>0 </sub>or <italic>s</italic><sub>1</sub>, depending on whether the operator site is bound (state 0) or unbound (state 1). The TF binds the operator site of the gene at a rate of <italic>b</italic>. It unbinds at a rate of <italic>u</italic>. The TF is also subject to degradation at a rate of <italic>d </italic>determined by the degradation machinery. Here the symbol &#x02205; represent the state of being degraded. (b) The chemical reactions of the five stochastic processes and the corresponding reaction rates.</p></caption><graphic xlink:href="1752-0509-2-30-1"/></fig><p>We first calculate the state spaces. We use the same initial condition of 1 copy of unbound gene, 0 copies of transcription factor and bound gene, and set the buffer size to allow different copy numbers of protein transcription factor to be synthesized. As there is only one copy of the gene in this model [<xref ref-type="bibr" rid="B18">18</xref>], the size of the state space increases with the copy number of the protein transcription factor that can be synthesized. Our results show that when the buffer capacity takes the value of 100, 1,000, and 10,000, the size of the state space is 201, 2,001, and 20,001, respectively. In this model, the size of the state space scales linearly with the copy number of the protein synthesized. In biological condition, the copy number of a transcription factor rarely exceeds 100.</p><p>We then calculate the exact steady state probability distribution over the microstates of the self-regulating gene, namely, the exact steady state density function of different states of copy numbers of the transcription factor. In our calculation, the parameter values are chosen as <italic>u </italic>= <italic>d</italic>/10 and <italic>b </italic>= <italic>d</italic>/250, in units of degradation rate <italic>d</italic>, following reference [<xref ref-type="bibr" rid="B18">18</xref>]. The steady state distributions <bold><italic>P </italic></bold>at different values of synthesis rates in on/unbound and off/bound states <italic>s</italic><sub>1 </sub>and <italic>s</italic><sub>0 </sub>are computed exactly and are shown in Fig <xref ref-type="fig" rid="F2">2</xref> for the case of buffer size of 1,010 for illustration. Here the marginal probability of having a specific number of free proteins in the system is plotted, regardless whether the gene is in off/bound or in on/unbound state. Following reference [<xref ref-type="bibr" rid="B18">18</xref>], we use three different network conditions: (<italic>s</italic><sub>0</sub>, <italic>s</italic><sub>1</sub>) = (50, 10), (50, 50), and (10, 50) in units of degradation rate <italic>d</italic>, respectively. When the on/unbound state synthesis rate <italic>s</italic><sub>1 </sub>is greater, the network is self-repressing. When the off/bound synthesis rate <italic>s</italic><sub>0 </sub>is greater, the network is self-activating.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p>The steady state landscape probability distributions of a self-regulating gene network. The probability over the number of free protein is plotted. Here this probability is the sum of probabilities for two different gene binding states (bound and unbound) at the same number of free proteins. When the unbound/on state synthesis rate <italic>s</italic><sub>1 </sub>is greater, the network is self-repressing. When the bound/off synthesis rate <italic>s</italic><sub>0 </sub>is greater, the network is self-activating. Although the self-repressing (front profile) and the self-activating (back profile) genes have overall similar distributions, the former has a slightly higher probability in producing more free proteins than the latter. When both synthesis rates are equal (middle profile), the network follows a simple birth/death process, with a Gaussian probability distribution.</p></caption><graphic xlink:href="1752-0509-2-30-2"/></fig><p>Our results and the results of Schultz <italic>et al </italic>obtained from multiple runs of Gillespie simulations are identical [<xref ref-type="bibr" rid="B18">18</xref>]. As pointed out in [<xref ref-type="bibr" rid="B18">18</xref>], the self-repressing and the self-activating genes can have overall similar distributions. This can be explained by the fact that the combined synthesis rate of the protein <italic>s</italic><sub>0 </sub>+ <italic>s</italic><sub>1 </sub>= 60 is the same in both cases (front profile and back profile in Fig <xref ref-type="fig" rid="F2">2</xref>). Closer examination shows that in the case of the self-repressing gene network (<italic>s</italic><sub>0 </sub>= 10 and <italic>s</italic><sub>1 </sub>= 50, front profile), the first peak of probability at smaller copy number of the free protein is lower, and the second peak at higher copy number is larger when compared to the distribution of the self-activating gene (<italic>s</italic><sub>0 </sub>= 50, and <italic>s</italic><sub>1 </sub>= 10, Fig <xref ref-type="fig" rid="F2">2</xref>, back profile). That is, the self-repressing network has a higher probability in producing more free proteins than the self-activating network. This can be explained by the difference between the protein-DNA binding rate <italic>b </italic>and unbinding rate <italic>u</italic>. In this model network, unbinding rate <italic>u </italic>= <italic>d</italic>/10 is 25 times greater than the binding rate <italic>b </italic>= <italic>d</italic>/250. As a result, this gene is more likely to stay in the unbound state. Since the self-repressing network has a higher synthesis rate in unbound state (<italic>s</italic><sub>1 </sub>= 50 &#x0003e; <italic>s</italic><sub>0 </sub>= 10), it will produce more free proteins. This results in an overall slightly higher probability for larger number of free proteins for self-repressing network. This small difference in probability distribution is also observed in [<xref ref-type="bibr" rid="B18">18</xref>]. As pointed out previously in [<xref ref-type="bibr" rid="B18">18</xref>], when both synthesis rates are equal (<italic>s</italic><sub>0 </sub>= <italic>s</italic><sub>1 </sub>= 50), the binding state transition do not change the synthesis/degradation process, and the network is a simple birth/death process, with a Gaussian probability distribution for protein number centered at <italic>s</italic><sub>0 </sub>= <italic>s</italic><sub>1 </sub>(Fig <xref ref-type="fig" rid="F2">2</xref>, middle profile).</p></sec><sec><title>Toggle switch</title><p>A toggle switch is a small network consisting of two genes, A and B. The protein product of each represses the other gene. Toggle switch is the smallest genetic network that can present bistability. The insightful study of Schultz <italic>et al </italic>provided detailed analysis of the stochastic behavior of this model network [<xref ref-type="bibr" rid="B18">18</xref>]. To facilitate direct comparison, we adopt the same toggle-switch model developed by these authors (Eqns 5&#x02013;8 in reference [<xref ref-type="bibr" rid="B18">18</xref>]). The molecular species and the network topology are shown in Fig <xref ref-type="fig" rid="F3">3a</xref>. There are a number of stochastic processes: the synthesis and degradation of proteins A and B, with reaction constants denoted as <italic>s </italic>and <italic>d</italic>, respectively; the binding and unbinding of the operator site of one gene by the protein products of the other gene at rate <italic>b </italic>and <italic>u</italic>, respectively (Fig <xref ref-type="fig" rid="F3">3b</xref>). The binding states of the two operator sites are "on-on/unbound-unbound" (state 11 for gene A and gene B), "on-off/unbound-bound" (state 10), "off-on/bound-unbound" (state 01), and "off-off/bound-bound" (state 00). The synthesis rates of both proteins A and B depend on the binding state of the operator sites. The toggle switch model used in this study and all possible chemical reactions in the model are extracted directly from the master equations in [<xref ref-type="bibr" rid="B18">18</xref>]. In this model, no dimerizations are explicitly modeled, and the model assumes that binding of two proteins to the operator site simultaneously. This is a valid approximation when the dimerization reaction is fast compared to all other reactions [<xref ref-type="bibr" rid="B8">8</xref>]. Even for this simple network, except for the special cases when "fast transition" between on- and off- operator states and "small noise" of high molecular concentration conditions are assumed, no exact solutions are known [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B18">18</xref>].</p><fig position="float" id="F3"><label>Figure 3</label><caption><p>The network of a toggle switch. (a) The topology of the network and variables representing the reaction rates. Single copies of gene A and gene B in the chromosome each encode a protein product. Two protein monomers can repress the transcription of the other gene. The synthesis of protein product of gene A and B depends on the bound or unbound state of the gene. (b) The chemical reactions of the 8 stochastic processes involved in the toggle-switch network. The reaction rates include <italic>s </italic>for protein synthesis, <italic>d </italic>for protein degradation, <italic>b </italic>for protein-gene binding, and <italic>u </italic>for protein-gene unbinding.</p></caption><graphic xlink:href="1752-0509-2-30-3"/></fig><p>We first calculate the state spaces under the initial condition of 1 copy of unbound gene A, 1 copy of unbound gene B, 0 copies of bound gene A and bound gene B, and 0 copies of their protein products. We set the buffer size to different copies of total protein A and protein B combined that can be synthesized. When the buffer capacity is 20, the size of the state space is 764. At buffer capacity of 200, 400, and 800 copies of proteins, the size increases to 79,604, 319,204, and 1,278,404, respectively.</p><p>We then calculate the exact steady state landscape probability of the toggle-switch network, namely, the exact steady state density function of different microstates of copy numbers of products of gene A and gene B. The steady state distributions <bold><italic>P </italic></bold>are shown in Fig <xref ref-type="fig" rid="F4">4</xref> for the case of buffer size of 300. In our calculation, the parameter values are chosen as <italic>s </italic>= 100<italic>d</italic>, <italic>u </italic>= <italic>d</italic>/10, and <italic>b </italic>= <italic>d</italic>/100, 000, in units of degradation rate <italic>d</italic>. These are the same as those used in reference [<xref ref-type="bibr" rid="B18">18</xref>].</p><fig position="float" id="F4"><label>Figure 4</label><caption><p>The steady state probability landscape of a toggle switch. A toggle switch has four different states, corresponding to different binding state of genes A and B. At the condition of small value of <italic>u</italic>/<italic>b</italic>, the off/off state is strongly suppressed, and the system exhibits bi-stability.</p></caption><graphic xlink:href="1752-0509-2-30-4"/></fig><p>It is clear that a toggle switch has four different states, corresponding to the "on/on", "on/off", "off/on" and "off/off" states. At the chosen parameter condition, the toggle/switch exhibits clear bi-stability, namely, it has high probabilities for the "on/off" and "off/on" states, but has a low probability for the "on/on" state. The "off/off" state is severely suppressed. Our results are identical with the results of Schultz <italic>et al </italic>obtained from multiple runs of Gillespie simulations [<xref ref-type="bibr" rid="B18">18</xref>].</p></sec><sec><title>MAPK network</title><p>MAPK cascade network plays important role in signal transduction. Here our purpose is to explore how to apply our algorithm to more realistic network model. Our goal in this paper is not to study the the stochastic nature and the dynamic behavior of MAPK network.</p><p>The MAPK cascade network (BioModels ID: BIOMD0000000028) is taken from the BioModels database at EBI [<xref ref-type="bibr" rid="B26">26</xref>,<xref ref-type="bibr" rid="B27">27</xref>]. The molecular species and reactions are extracted from the SBML (Systems Biology Markup Language) model file. This network contains 16 molecular species with 17 reactions [<xref ref-type="bibr" rid="B26">26</xref>]. As there is no synthesis reaction, this particular network model is a closed system. Abbreviations used in this model are listed in Table <xref ref-type="table" rid="T1">1</xref>. Fig <xref ref-type="fig" rid="F5">5</xref> shows the topology of the model. All 16 molecular species are labeled with numbers from 1 to 16. Among them, MEK (triangles in Fig <xref ref-type="fig" rid="F5">5</xref>) and MKP3 (squares) are the key enzymes catalyzing all phosphorylation and dephosphorylation reactions in this network. The rest of the molecular species are substrates, intermediates, and products of MEK and MKP3 induced reactions. Most of the reactions in this model (14 of 17) are second-order.</p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Abbreviations of the molecular species in the MAPK network.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center">Num.</td><td align="right">Abbrev.</td><td align="left">Description</td></tr></thead><tbody><tr><td align="center">1</td><td align="right">M</td><td align="left">ERK, extracellular signal- regulated kinase</td></tr><tr><td align="center">2</td><td align="right">MpY</td><td align="left">ERK with Y phosphorylated</td></tr><tr><td align="center">3</td><td align="right">MpT</td><td align="left">ERK with T phosphorylated</td></tr><tr><td align="center">4</td><td align="right">Mpp</td><td align="left">ERK with dual phosphorylated</td></tr><tr><td align="center">5</td><td align="right">MEK</td><td align="left">ERK kinase</td></tr><tr><td align="center">6</td><td align="right">MKP3</td><td align="left">ERK phosphatase</td></tr><tr><td align="center">7</td><td align="right">MpY_MEK</td><td align="left">Binding of MpY and MEK</td></tr><tr><td align="center">8</td><td align="right">MpT_MEK</td><td align="left">Binding of MpT and MEK</td></tr><tr><td align="center">9</td><td align="right"><bold>M_MEK _Y</bold></td><td align="left"><bold>Binding of M and MEK at Y site</bold></td></tr><tr><td align="center">10</td><td align="right"><bold>M_MEK_T</bold></td><td align="left"><bold>Binding of M and MEK at T site</bold></td></tr><tr><td align="center">11</td><td align="right"><bold>Mpp_MKP3</bold></td><td align="left"><bold>Binding of Mpp and MKP3</bold></td></tr><tr><td align="center">12</td><td align="right">MpY_MKP3</td><td align="left">Binding of MpY and MKP3</td></tr><tr><td align="center">13</td><td align="right">MpT_MKP3_Y</td><td align="left">Binding of MpT and MKP3 at Y</td></tr><tr><td align="center">14</td><td align="right">MpT_MKP3_T</td><td align="left">Binding of MpT and MKP3 at T</td></tr><tr><td align="center">15</td><td align="right">M_MKP3_T</td><td align="left">Binding of M and MKP3 at T site</td></tr><tr><td align="center">16</td><td align="right">M_MKP3_Y</td><td align="left">Binding of M and MKP3 at Y site</td></tr></tbody></table></table-wrap><fig position="float" id="F5"><label>Figure 5</label><caption><p>The MAPK network model according to BioModel (id BIOMD28). The molecular species are labeled with integer numbers. Reactions are labeled with variables representing the corresponding reaction rate, <italic>b</italic><sub><italic>i </italic></sub>for binding rates, <italic>u</italic><sub><italic>i </italic></sub>for unbinding rates, and <italic>k</italic><sub><italic>i </italic></sub>for rates of first order reactions. Solid arrows in this figure represent binding reactions, and empty arrows for unbinding reactions. The parameter values of this model are taken as is from the SBML model. We have: <italic>b</italic><sub>1 </sub>= 0.005, <italic>b</italic><sub>3 </sub>= 0.025, <italic>b</italic><sub>5 </sub>= 0.05, <italic>b</italic><sub>7 </sub>= 0.005, <italic>b</italic><sub>9 </sub>= 0.045, <italic>b</italic><sub>10 </sub>= 0.01, <italic>b</italic><sub>11 </sub>= 0.01, <italic>b</italic><sub>12 </sub>= 0.0011, <italic>b</italic><sub>13 </sub>= 0.01, <italic>b</italic><sub>14 </sub>= 0.0018, <italic>u</italic><sub>1,3,5,7,9,10,11,13 </sub>= 1, <italic>u</italic><sub>2 </sub>= 1.08, <italic>u</italic><sub>4 </sub>= 0.007, <italic>u</italic><sub>6 </sub>= 0.008, <italic>u</italic><sub>8 </sub>= 0.45, <italic>u</italic><sub>12 </sub>= 0.086, <italic>u</italic><sub>14 </sub>= 0.14, <italic>k</italic><sub>1 </sub>= 0.092, <italic>k</italic><sub>2 </sub>= 0.5, and <italic>k</italic><sub>3 </sub>= 0.47.</p></caption><graphic xlink:href="1752-0509-2-30-5"/></fig></sec><sec><title>Simple initial conditions</title><p>We generate the state spaces of the MAPK network for different initial conditions and record their sizes. We first increase the copy number for one species from 1 to 20, and record the size of resulting state space, while keeping the copy numbers of all other species to 0. We repeat this process for each of the 16 molecular species in turn. Altogether, we have 16 &#x000d7; 20 = 320 data points of sizes of the state space (Fig <xref ref-type="fig" rid="F6">6</xref>).</p><fig position="float" id="F6"><label>Figure 6</label><caption><p>Sizes of state spaces for a model of the MAPK cascades under the initial condition of 1 to 20 copies of each of the 16 species in turn and 0 in all other species. Altogether the size of state space for 16 &#x000d7; 20 = 320 initial conditions are shown here.</p></caption><graphic xlink:href="1752-0509-2-30-6"/></fig><p>It is clear that different molecular species in this model affect the size of the state space differently. Increasing the copy number of M-MEK-Y, M-MEK-T, and Mpp-MKP3 molecules (species 9, 10 and 11, in bold fonts in Table <xref ref-type="table" rid="T1">1</xref>) lead to large state spaces (size 888, 030 at 20 copies, Fig <xref ref-type="fig" rid="F6">6</xref>), while the initial conditions of 20 copies of any other species result in modest state spaces. For example, species 7, 8, 15 and 16 when given 20 copies have a state-space size of 231. For species 1&#x02013;6 (M, MpY, MpT, Mpp, MEK, MKP3), no reactions can occur at these initial conditions, and the state space contains only the the initial state.</p><p>The state space for each of the 320 initial conditions can be computed within one minute. We further found that when any of <italic>S</italic><sub>9</sub>, <italic>S</italic><sub>10</sub>, or <italic>S</italic><sub>11 </sub>has an initial copy of 28 and all others 0 copies, the state spaces increases to 6,724,520, and the computing time also increase, although all can be computed within 10 minutes on a Linux workstation.</p></sec><sec><title>Biological initial conditions</title><p>We further calculate sizes of the state spaces with several biologically plausible initial conditions, in which species M, MEK and MKP3 are all given an equal number of <italic>i </italic>copies, while all the other species start with zero copies. We increase <italic>i </italic>from 1 to 11. These initial conditions correspond to a total number ranging from 3 &#x000d7; 1 = 3 copies to 3 &#x000d7; 11 = 33 copies of molecules of three species in the network. The size of the state space increases with the copy numbers. When there are 1 copy of M, MEK, and MKP3 each, the size of the state space is 14. For 5, 10, and 11 copies of M, MEK, and MKP3 each, the size increases to 8,568, 1,144,066, and 2,496,144, respectively. The computation of the state space at <italic>i </italic>= 10 and <italic>i </italic>= 11 requires 156 seconds and 589 seconds of CPU time on a Linux desktop machine, respectively.</p></sec><sec><title>Steady state distribution</title><p>We compute the steady state probability distributions of the microstates of the MAPK network at the initial condition of 10 copies each of M, MEK and MKP3. That is, we obtain the exact steady state density function of different microstates of all possible 1,144,066 combinations of different copy numbers of the 16 molecular species in the MAPK network. The computation is efficient. At this initial condition, the dimension of the Markovian transition matrix <italic>M </italic>is 1, 144, 066 &#x000d7; 1, 144, 066, with 14, 574, 406 number of non-zero elements. It takes 1,341 seconds (about 23 minutes) of CPU time to compute the steady state probability distribution on a Linux workstation.</p><p>As it is impossible to directly visualize the landscape density distribution in a 16-dimensional space, for ease of visualization, we plot the marginal distribution of different combinations of copy numbers of extracellular signal-regulated kinase (ERK) in unphosphorylated state, in single phosphorylated state, and in dual phosphorylated state. Specifically, we plot the marginal probabilities of different copy numbers of unphosphorylated ERK (M), and ERK with either Y or T site phosphorylated (Mp, including both MpY and MpT), after integrating different copy numbers of all other 14 molecular species in Fig <xref ref-type="fig" rid="F7">7a</xref>. We plot the marginal distribution of different copy numbers of unphosphorylated ERK (M), and ERK with both Y or T site phosphorylated (Mpp) Fig <xref ref-type="fig" rid="F7">7b</xref>. We plot the marginal distribution of different copy numbers of uni-phosphorylated ERK with either Y or T site phosphorylated (Mp, including both MpY and MpT), and ERK with both Y or T site phosphorylated (Mpp) in Fig <xref ref-type="fig" rid="F7">7c</xref>. At this parameter condition, the steady state distribution has a single peak centered around two copies of unphosphorylated ERK (M), two copies of uni-phosphorylated ERK (Mp), and zero copy of dual phosphorylated ERK (Mpp).</p><fig position="float" id="F7"><label>Figure 7</label><caption><p>The marginal landscape probability distribution of different copy numbers of molecular species in the MAPK network in steady state. (a) Marginal probability distribution of the combination of the number of unphosphorylated ERK (M) and uniphosphorylated ERK (Mp, including both MpY and MpT), regardless of the copy numbers of all other molecular species; (b) Marginal probability distribution of the combination of the copy numbers of unphosphorylated ERK (M) and dual-phosphorylated ERK (Mpp); (c) Marginal probability distribution of the combination of the copy numbers of uniphosphorylated Mp and dual phosphorylated Mpp.</p></caption><graphic xlink:href="1752-0509-2-30-7"/></fig></sec></sec></sec><sec><title>Conclusion</title><p>Stochasticity plays important roles in molecular networks for processes involving small copy numbers of molecules. Models of molecular networks based on macroscopic reaction rates and coupled ordinary differential equations are not applicable in these cases, as they can only model high concentrations of interacting molecules with negligible fluctuations.</p><p>The stochastic nature of molecular interactions at low copy numbers can be fully characterized if the time-varying landscape probability distribution on all of the microstates of a molecular network can be computed. This is a difficult task, as the state space of the combination of the copy numbers of molecular species needs to be explicitly enumerated, the probability distribution over these microstates and changes of this distribution across many decades of time scale need to be fully computed.</p><p>In this study, we have developed an algorithm to enumerate the state space of a molecular network of small copy numbers with a buffer containing a finite number of molecules that can be synthesized. It can also be used to find all possible transitions between states, and to compute the transition rates between these states. We also demonstrate how to obtain the steady state probability distribution based on the enumerated states when it exists.</p><p>Our example of the toggle-switch network shows that this method can be used to study the rise of important network properties such as bistability. The enumeration of the full state space of the MAPK cascade network at various initial conditions demonstrate that our method can be used to study a realistic network of nontrivial size, which is more complicated than the simple networks that are often studied for full stochasticity. Although naively the state space at the initial condition of each of 11 copies of unphosphorylated, uniphosphorylated, and biphosphorylated ERK kinase might be as high as (33 + 1)<sup>16 </sup>= 3.19 &#x000d7; 10<sup>24</sup>, a truly astronomical size, our method showed that the relevant space is only about 2.50 &#x000d7; 10<sup>6</sup>, which is amenable for computation using a desktop computer.</p><p>Our method is applicable to study various carefully constructed model network systems. It complements the Monte Carlo simulation method, as it can be used to characterize the full probability landscape of networks with enumerable state space. For example, it will allow the calculation of the probabilities of the occurrence of rare and critical events. For theoretical studies, one can predefine a fixed number of net molecules that can be synthesized, and investigate the nature of the landscape probability distribution. This is similar to the studies of semi-grand canonical ensemble in statistical physics [<xref ref-type="bibr" rid="B28">28</xref>]. Exact characterization of probability landscape is useful, as most network studies are based on stochastic simulation, and relative little is known at the level of the full stochastic landscape probability distribution, even for simple toy systems. For example, analytical solutions to the simple toggle switch model is known only when the model parameters follows the restrictions of small noise and fast transition [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B18">18</xref>]. We believe our method can be used to study well designed model systems beyond self-regulating genes and simple toggle switches, and the exact results obtained will be helpful for understanding the basic properties and design principles governing stochastic networks. A useful analogy to illustrate the utility of such model studies can be found in the field of protein folding, where a large number of studies using simple short chain HP lattice models revealed remarkable insights about how complex proteins fold [<xref ref-type="bibr" rid="B29">29</xref>-<xref ref-type="bibr" rid="B36">36</xref>].</p><p>Our method can also be applied to more realistic biological networks, such as the MAPK network model, which is a closed system according to the annotated BioModels database [<xref ref-type="bibr" rid="B27">27</xref>]. Such closed systems could arise when one focus on a submodule of a larger network. For the majority of realistic networks which are open systems, an important determining factor of the applicability of our method is the limit of the capacity of a buffer, which has to be greater than the maximum copy number of the net gain in protein molecules that can be synthesized. In a cell, this maximum number is determined by the life time of the cell, and the net synthesis rate of protein molecules. The latter depends on both protein synthesis and degradation rates. A simple approach is to estimate the net number of protein molecules that can be synthesized during the life time of a cell. For example, the lifespan of an <italic>E. coli </italic>cell is about 30 minutes [<xref ref-type="bibr" rid="B37">37</xref>]. Estimation based on the rate limiting processes of transcription initialization and elongation indicate that the protein synthesis rate ranges from 0.0077/<italic>s </italic>(for the C1 protein) [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B38">38</xref>] to 0.0534/<italic>s </italic>for the Cro protein [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B39">39</xref>,<xref ref-type="bibr" rid="B40">40</xref>] in the lambda phage system. Their degradation rates are about 0.0007/<italic>s </italic>and 0.0025/<italic>s</italic>, respectively [<xref ref-type="bibr" rid="B2">2</xref>]. This suggests that a useful bound of the copy number of newly synthesized molecules for studying the lambda switch network system could be in the order of 150&#x02013;200 copies under reasonable initial conditions. Naturally, the exact number will depend on the details of the chosen network model and the parameter values. For example, models of cells under stress with retarded synthetic rates may require a relatively small buffer capacity.</p><p>In this study, we have described a method to compute the steady state landscape probability distribution. Steady state distribution is of general interests when it exists, as has been shown in previous studies [<xref ref-type="bibr" rid="B17">17</xref>,<xref ref-type="bibr" rid="B18">18</xref>]. For realistic network, another approach is to compute the time-dependent dynamic change of landscape probability distribution, using techniques such as those used in [<xref ref-type="bibr" rid="B36">36</xref>]. We will describe this approach in more details in future studies.</p><p>As the number of molecular species and their copy numbers increase, the state space will eventually become prohibitively large for explicit computation even with an optimal algorithm. In these cases, our method can be used to select important states and to control error bounds at a specific tolerance for developing approximation methods, an approach well demonstrated in [<xref ref-type="bibr" rid="B22">22</xref>].</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>The Algorithm</title><p>Suppose we have a model of a biological network, which contains <italic>m </italic>molecular species and can have <italic>n </italic>reactions. Given an initial condition, namely, the copy numbers of each of the <italic>m </italic>molecular species, we aim to calculate all states that the biological system can reach starting from this initial condition, under the condition that the net number of molecules that can be synthesized does not exceed a predefined limit. These states collectively constitute the state space of the network under this initial condition.</p><p>Formally, we have a model of a biological network <bold><italic>N </italic></bold>= <bold>(</bold><bold><italic>M</italic></bold>, <bold><italic>R</italic></bold>), with <italic>m </italic>+ 1 number of molecular species: <bold><italic>M </italic></bold>= (<italic>M</italic><sub>1</sub>,...<italic>M</italic><sub><italic>m</italic>+1</sub>), and <italic>n </italic>reactions: <bold><italic>R </italic></bold>= {<italic>R</italic><sub>1</sub>,..., <italic>R</italic><sub><italic>n</italic></sub>}. Here <italic>m </italic>of the species are from the network. A buffer of predefined capacity is used to represent a pool of virtual molecules for open systems, from which synthesis reactions can generate new molecules, and to which degradation reactions can deposit molecules removed from the network. We use the <italic>m </italic>+ 1-th species to represent this buffer pool. The combinations of copy numbers of all molecular species <bold><italic>S </italic></bold>= (<italic>c</italic><sub>1</sub>,...,<italic>c</italic><sub><italic>m</italic></sub>, <italic>c</italic><sub><italic>m</italic>+1</sub>) form the microstate of the system, where <italic>c</italic><sub><italic>m</italic>+1 </sub>denotes the number of net new molecules that can still be synthesized at this state. A reaction can involve an arbitrary number (&#x02265; 1 and &#x02264; <italic>m</italic>) of molecular species as reactants and/or products, with any arbitrary positive integer coefficient (<italic>i.e</italic>., arbitrary stoichiometry). Synthesis reaction is allowed to occur only if the buffer pool is not exhausted, namely, only if <italic>c</italic><sub><italic>m</italic>+1 </sub>&#x0003e; 0. The set of all possible states <bold><italic>S </italic></bold>that can be reached from an initial condition following these rules constitute the state space of the system: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> = {<bold>S</bold>}. The set of allowed transitions is <bold><italic>T </italic></bold>= {<italic>t</italic><sub><italic>ij</italic></sub>}. We are given with an initial condition: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1752-0509-2-30-i2" overflow="scroll"><mml:semantics><mml:mrow><mml:msup><mml:mi>S</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mn>1</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mn>2</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>m</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:semantics></mml:math></inline-formula>, where <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1752-0509-2-30-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mi>i</mml:mi><mml:mn>0</mml:mn></mml:msubsup></mml:mrow></mml:semantics></mml:math></inline-formula> is the initial copy number of the <italic>i</italic>-th molecular species at time <italic>t </italic>= 0, and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1752-0509-2-30-i4" overflow="scroll"><mml:semantics><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo>=</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:semantics></mml:math></inline-formula> is the predefined buffer size. The maximum copy number of net gain in newly synthesized molecules of the system is restricted by this constant <italic>B</italic>. Our aim is to enumerate the state space <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M5" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> under this given initial condition.</p><p>The algorithm is written as Algorithm 1 (see Appendix). It performs the following computation: After initialization, we start with the initial state <italic>S</italic><sup><italic>t </italic>= 0</sup>. We examine each reaction in turn to determine if this reaction can occur for the current state. If so, and if the buffer is not exhausted, we generate the state that this reaction leads to. If the newly generated state was not encountered before, we add it to our collection of states for the state space, and declare it as a new state. We repeat this for all new states, which is maintained by a stack data structure. This terminates when all new states are exhausted.</p><p>In this algorithm, a stack data structure is used. Description of the stack data structure can be found in computer science textbooks such as [<xref ref-type="bibr" rid="B41">41</xref>]. A stack is used here to store individual states. These states are "Push"ed onto the stack: If we encounter a previously unseen state, we create it and push it onto the stack so further calculations on this state can be carried out at a later stage. We use the "Pop" operation to obtain a state previously stored on the stack to carry out these calculations. In this case, we pop a state to examine what reactions can occur and what other states these reactions can lead to.</p><p>We can compute the transition coefficient {<italic>a</italic><sub><italic>i</italic>, <italic>j</italic></sub>} between two microstates <bold><italic>S</italic></bold><sub><italic>i </italic></sub>and <bold><italic>S</italic></bold><sub><italic>j </italic></sub>using Algorithm 2 (see Appendix) following the approach outlined in references [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B18">18</xref>,<xref ref-type="bibr" rid="B22">22</xref>]. We give further details in later sections on how this is done for the three networks studied here.</p><sec><title>Correctness and optimality</title><p>The state space and the transitions under a given initial condition can be considered as a directed graph <italic>G</italic>= (<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M6" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula>, <bold><italic>T</italic></bold>), in which vertice are the state vectors, <italic>i.e</italic>., the set of reachable states <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M7" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula>, or the <italic>m </italic>+ 1-tuples of copy numbers of the <italic>m </italic>+ 1 molecular species, including the buffer. Edges are the set of allowed transitions <bold><italic>T </italic></bold>between the states, <italic>i.e</italic>., reactions connecting two state vertice. Two vertice <italic><bold><italic>S</italic></bold><sub><italic>i </italic></sub></italic>&#x02208; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M8" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> and <bold><italic>S</italic></bold><sub><italic>j </italic></sub>&#x02208; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M9" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> are connected by a directed edge <italic>t</italic><sub><italic>i</italic>, <italic>j </italic></sub>&#x02208; <bold><italic>T </italic></bold>if and only if <bold><italic>S</italic></bold><sub><italic>i </italic></sub>can be transformed to <bold><italic>S</italic></bold><sub><italic>j </italic></sub>through a reaction. Any reachable state can be transformed from the initial state by one or more steps of reactions, and the directed graph <italic>G </italic>is a connected graph.</p><p>Our algorithm implicitly generates this graph <italic>G</italic>. Because the set of reactions <bold><italic>R </italic></bold>is finite, <italic>G </italic>has a finite tree-width at any finite steps away from the initial condition. Assume the algorithm will not terminate in finite steps. Since in this algorithm each state is only visited no more than twice, <italic>G </italic>must have an unlimited depth. That is, there must exist a path <italic>p </italic>in the graph <italic>G </italic>that starts from the initial state and extends to infinite. Therefore <italic>p </italic>must contain an infinite number of different states. This is impossible for any given initial condition, as each molecular species has a limited initial copy number, and the size of the buffer limits the number of new molecules that can be synthesized in open systems. The algorithm therefore must terminate.</p><p>This algorithm gives correct answers, assuming that the newly synthesized molecules does not exceed the predefined buffer capacity. This is because all states visited in the algorithm can be reached from the initial condition, and all visited states is actually reached as each is brought to by a chemical reaction. In addition, all reachable states will be visited, as the algorithm test at each state all possible reactions, and will only terminates when all new states are exhausted. It is easy to see all possible transitions between states will be recorded.</p><p>The time complexity of our algorithm is optimal. Since only unseen state will be pushed onto the stack, every state is pushed and popped at most once, and each state will be generated/visited at most twice before it is popped from the stack. As access to each state and to push/pop operations take <italic>O</italic>(1) time, the total time required for the stack operations is <italic>O</italic>(|<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M10" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula>|). As the algorithm examines each of the <italic>n </italic>reactions for each reached state, the complexity of total time required is <italic>O</italic>(<italic>n</italic>|<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M11" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula>|), where <italic>n </italic>is usually a modest constant (e.g. &#x0003c; 50). Based on the same argument, it is also easy to see that the algorithm is optimal in storage, as only valid states and valid transitions are recorded.</p></sec><sec><title>Computing mean and steady state probability distribution</title><p>We can calculate the expected landscape probability distribution over the microstates, namely, the exact mean density function of different microstates of copy numbers in the network. It is the same as the steady state probability distribution function if the steady state exists. Instead of calculating the time trajectories of changes in the probability distribution and wait until it reaches equilibrium, we use a simpler approach applicable to networks in which a steady state exists. Following Kachalo <italic>et al </italic>[<xref ref-type="bibr" rid="B36">36</xref>], we obtain the Markovian state transition matrix <bold><italic>M </italic></bold>from the reaction rate matrix <bold><italic>A</italic></bold>: <bold><italic>M </italic></bold>= <bold><italic>I </italic></bold>+ <bold><italic>A</italic></bold>&#x000b7;&#x00394;t, where <bold><italic>I </italic></bold>is the identity matrix, and &#x00394;<italic>t </italic>is the discrete time unit and is chosen to be 1. The probability distribution function <bold><italic>P </italic></bold>of the microstates can be obtained by solving the equation <bold><italic>P </italic></bold>= <bold><italic>MP</italic></bold>. The calculation of the steady state distribution <bold><italic>P </italic></bold>is not sensitive to the precise choice of the discrete time unit &#x00394;<italic>t</italic>. The steady state distribution corresponds to the eigenvector of <bold><italic>M </italic></bold>with eigenvalue of 1. We use the Arnoldi method implemented in the software ARPACK to compute the steady state distribution <bold><italic>P </italic></bold>[<xref ref-type="bibr" rid="B42">42</xref>].</p></sec></sec><sec><title>Computing transition coefficients</title><p>The transition coefficient between different states connected by a reaction is calculated by multiplying the intrinsic rate of this reaction with the reaction order dependent combination number of copies of reactants in the "before" state [<xref ref-type="bibr" rid="B14">14</xref>]. We provide more details using examples from the three networks.</p><sec><title>Self-regulating gene</title><p>Suppose the first order reaction</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M12" name="1752-0509-2-30-i5" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mi>d</mml:mi></mml:mover><mml:mo>&#x02205;</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>enables the transition of the system from the microstate <italic>i </italic>to <italic>j</italic>. This reaction denotes the degradation of the protein molecule at an intrinsic rate of <italic>d</italic>. The stoichiometry of this reaction dictates that the copy number of protein <italic>n</italic><sub><italic>p</italic>, <italic>j </italic></sub>in the "after" state <italic>j </italic>is one less than the copy number <italic>n</italic><sub><italic>p</italic>, <italic>i </italic></sub>in the "before" state <italic>i</italic>. From the reaction formula, the transition coefficient <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>for the matrix <bold>A </bold>is calculated as:</p><p><disp-formula><italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>= <italic>d&#x000b7;n</italic><sub><italic>p</italic>, <italic>i</italic></sub>.</disp-formula></p><p>Recall that since a microstate is uniquely determined by the combination of copy numbers of all molecular species, <italic>n</italic><sub><italic>p</italic>, <italic>i </italic></sub>therefore is known as a state attribute.</p><p>For the second order reaction</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M13" name="1752-0509-2-30-i6" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mi>b</mml:mi></mml:mover><mml:mi>B</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>the transition coefficient connecting the "before" state <italic>i </italic>to the "after" state <italic>j </italic>can be computed as:</p><p><disp-formula><italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>= <italic>b</italic>&#x000b7;<italic>n</italic><sub><italic>p</italic>, <italic>i</italic></sub>&#x000b7;<italic>n</italic><sub><italic>g</italic>, <italic>i</italic></sub>,</disp-formula></p><p>where <italic>b </italic>is the intrinsic reaction rate, <italic>n</italic><sub><italic>p</italic>, <italic>i </italic></sub>is the protein copy number at state <italic>i</italic>, and <italic>n</italic><sub><italic>g</italic>, <italic>i </italic></sub>is the copy number of gene in state <italic>i</italic>, which is 1, as we assume there is only one copy of the gene in this network model.</p><p>We can similarly compute the transition coefficient <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>for the reaction</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M14" name="1752-0509-2-30-i7" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>B</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mi>u</mml:mi></mml:mover><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>as <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>= <italic>u</italic>&#x000b7;<italic>n</italic><sub><italic>bg</italic>, <italic>i</italic></sub>, where <italic>n</italic><sub><italic>bg</italic>, <italic>i </italic></sub>is the number of bound gene in the "before" state, which takes the value of 0 or 1 in this model, depending on whether the gene is in protein-free or in protein-bound state. For the simpler reaction:</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M15" name="1752-0509-2-30-i8" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>B</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mover><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>we have <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>= <italic>s</italic><sub>0</sub>&#x000b7;<italic>n</italic><sub><italic>bg</italic>, <italic>i</italic></sub>, where <italic>n</italic><sub><italic>bg</italic>, <italic>i </italic></sub>is the number of bound gene in state <italic>i</italic>, which takes the value of 0 or 1. For the synthetic reaction of</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M16" name="1752-0509-2-30-i9" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mover><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>we have <italic>a</italic><sub><italic>ij </italic></sub>= <italic>s</italic><sub>1</sub>&#x000b7;<italic>n</italic><sub><italic>g</italic>, <italic>i</italic></sub>.</p><p>We have described how to compute the transition coefficient for all reactions in the represser gene network. In Algorithm 2, we can compute the transition coefficient <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>based on the formula of the reaction leading from state <italic>i </italic>to state <italic>j</italic>.</p></sec><sec><title>Toggle switch</title><p>For the third order reaction</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M17" name="1752-0509-2-30-i10" overflow="scroll"><mml:semantics><mml:mrow><mml:mn>2</mml:mn><mml:mo>&#x000d7;</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>A</mml:mi><mml:mo>+</mml:mo><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>B</mml:mi><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mi>b</mml:mi></mml:mover><mml:mi>B</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>B</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>the transition coefficient <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>can be computed as</p><p><disp-formula><italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>= <italic>b</italic>&#x000b7;<italic>n</italic><sub><italic>gB</italic>, <italic>i</italic></sub>&#x000b7;<italic>n</italic><sub><italic>pA</italic>, <italic>i</italic></sub>&#x000b7;(<italic>n</italic><sub><italic>pA</italic>, <italic>i </italic></sub>- 1)/2,</disp-formula></p><p>where <italic>b </italic>is the intrinsic reaction rate, <italic>n</italic><sub><italic>pA</italic>, <italic>i </italic></sub>is the copy number of protein A in state <italic>i</italic>, and <italic>n</italic><sub><italic>gB</italic>, <italic>i </italic></sub>is the copy number of unbound gene <italic>B</italic>, which takes the value of 0 or 1. For this third order reaction, the number of possible ways of choosing two protein molecules from <italic>n</italic><sub><italic>pA</italic>, <italic>i </italic></sub>copies is <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M18" name="1752-0509-2-30-i11" overflow="scroll"><mml:semantics><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x022c5;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:semantics></mml:math></inline-formula>. Transition coefficients for the other reactions in this network can be computed similarly following this reaction and the reactions described earlier for the represser gene network.</p></sec><sec><title>MAPK network</title><p>We consider the second order binding reaction</p><p><disp-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M19" name="1752-0509-2-30-i12" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>M</mml:mi><mml:mi>K</mml:mi><mml:mi>P</mml:mi><mml:mn>3</mml:mn><mml:mover><mml:mo>&#x02192;</mml:mo><mml:mrow><mml:msub><mml:mi>b</mml:mi><mml:mrow><mml:mn>14</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mover><mml:mi>M</mml:mi><mml:mo>_</mml:mo><mml:mi>M</mml:mi><mml:mi>K</mml:mi><mml:mi>P</mml:mi><mml:mn>3</mml:mn><mml:mo>_</mml:mo><mml:mi>Y</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:semantics></mml:math></disp-formula></p><p>If the "before" state <italic>i </italic>is transformed to the "after" state <italic>j </italic>by one step of this reaction, the corresponding transition coefficient <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>can be computed as</p><p><disp-formula><italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>= <italic>b</italic><sub>14</sub>&#x000b7;<italic>n</italic><sub><italic>M</italic>, <italic>i</italic></sub>&#x000b7;<italic>n</italic><sub><italic>MKP</italic>3, <italic>i</italic></sub></disp-formula></p><p>where <italic>b</italic><sub>14 </sub>is the intrinsic reaction rate, <italic>n</italic><sub><italic>M</italic>, <italic>i </italic></sub>and <italic>n</italic><sub><italic>MKP</italic>3, <italic>i </italic></sub>are the copy numbers of M and MKP3 molecules in state <italic>i</italic>, respectively. The other transition coefficients in this network can be computed similarly using the intrinsic reaction rates given in Fig <xref ref-type="fig" rid="F5">5</xref> and the copy numbers of reactants determined by the "before" state <italic>i</italic>.</p></sec></sec></sec><sec><title>Authors' contributions</title><p>JL designed the algorithm for state space enumeration and steady state computation. YC and JL designed the method for transition matrix generation, YC implemented these algorithms, and developed the molecular models. YC carried out computation. YC and JL analyzed the data and wrote the paper together.</p></sec><sec><title>Appendix</title><p><bold>Algorithm 1 </bold>State Enumerator(<bold><italic>M</italic></bold>, <bold><italic>R</italic></bold>, <italic>B</italic>)</p><p>Network model: <bold><italic>N </italic></bold>&#x02190; {<bold><italic>M</italic></bold>, <bold><italic>R</italic></bold>};</p><p>Initial condition: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M20" name="1752-0509-2-30-i13" overflow="scroll"><mml:semantics><mml:mrow><mml:msup><mml:mi>S</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02190;</mml:mo><mml:mo>{</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mn>1</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mn>2</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>m</mml:mi><mml:mn>0</mml:mn></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:semantics></mml:math></inline-formula>; Set the value of buffer capacity: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M21" name="1752-0509-2-30-i14" overflow="scroll"><mml:semantics><mml:mrow><mml:msubsup><mml:mi>c</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>0</mml:mn></mml:msubsup><mml:mo>&#x02190;</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:semantics></mml:math></inline-formula>;</p><p>Initialize the state space and the set of transitions: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M22" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> &#x02190; &#x02205;; <bold><italic>T </italic></bold>&#x02190; &#x02205;;</p><p>Stack <italic>ST </italic>&#x02190; &#x02205;; Push(<italic>ST</italic>, <bold><italic>S</italic></bold><sup><italic>t </italic>= 0</sup>); <italic>StateGenerated </italic>&#x02190; FALSE</p><p><bold>while </bold><italic>ST </italic>&#x02260; &#x02205; <bold>do</bold></p><p>&#x000a0;&#x000a0;&#x000a0;<bold><italic>S</italic></bold><sub><italic>i </italic></sub>&#x02190; Pop (<italic>ST</italic>);</p><p>&#x000a0;&#x000a0;&#x000a0;<bold>for </bold><italic>k </italic>= 1 to <italic>n </italic><bold>do</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>if </bold>reaction <italic>R</italic><sub><italic>k </italic></sub>occurs under condition <bold><italic>S</italic></bold><sub><italic>i </italic></sub>then</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;if reaction <italic>R</italic><sub><italic>k </italic></sub>is a synthetic reaction and generates <italic>u</italic><sub><italic>k </italic></sub>new molecules <bold>then</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>c</italic><sub><italic>m</italic>+1 </sub>&#x02190; <italic>c</italic><sub><italic>m+1 </italic></sub>- <italic>u</italic><sub><italic>k</italic></sub></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>if </bold><italic>c</italic><sub><italic>m</italic>+1 </sub>&#x02265; 0 <bold>then</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;Generate state <bold><italic>S</italic></bold>(<italic>i</italic>, <italic>R</italic><sub><italic>k</italic></sub>) that is reached by following reaction <italic>R</italic><sub><italic>k </italic></sub>from <bold><italic>S</italic></bold><sub><italic>i</italic></sub>;</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>StateGenerated </italic>&#x02190; TRUE</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>else</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>if </bold>reaction <italic>R</italic><sub><italic>k </italic></sub>is a degradation reaction and breaks down <italic>u</italic><sub><italic>k </italic></sub>molecules <bold>then</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>c</italic><sub><italic>m</italic>+1 </sub>&#x02190; <italic>c</italic><sub><italic>m</italic>+1 </sub>+ <italic>u</italic><sub><italic>k</italic></sub></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;Generate state <bold><italic>S</italic></bold>(<italic>i</italic>, <italic>R</italic><sub><italic>k</italic></sub>) that is reached by following reaction <italic>R</italic><sub><italic>k </italic></sub>from <bold><italic>S</italic></bold><sub><italic>i</italic></sub>;</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>StateGenerated </italic>&#x02190; TRUE</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>if </bold>(<italic>StateGenerated </italic>= TRUE) and (<bold><italic>S</italic></bold>(<italic>i</italic>, <italic>R</italic><sub><italic>k</italic></sub>) &#x02209; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M23" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula>) <bold>then</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M24" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> &#x02190; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M25" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula> &#x0222a; <bold><italic>S</italic></bold>(<italic>i</italic>, <italic>R</italic><sub><italic>k</italic></sub>);</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;Push(<italic>ST</italic>, <bold><italic>S</italic></bold>(<italic>i</italic>, <italic>R</italic><sub><italic>k</italic></sub>));</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold><italic>T </italic></bold>&#x02190; <bold><italic>T </italic></bold>&#x0222a; <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M26" name="1752-0509-2-30-i15" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>;</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>&#x02190; Transition Coefficient(<bold><italic>S</italic></bold><sub><italic>i</italic></sub>, <bold><italic>S</italic></bold>(<italic>i</italic>, <italic>R</italic><sub><italic>k</italic></sub>), <italic>R</italic><sub><italic>k</italic></sub>)</p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end if</bold></p><p>&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;&#x000a0;<bold>end for</bold></p><p>end while</p><p>Output <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M27" name="1752-0509-2-30-i1" overflow="scroll"><mml:semantics><mml:mi mathvariant="script">X</mml:mi></mml:semantics></mml:math></inline-formula>, <bold><italic>T </italic></bold>and <bold><italic>A </italic></bold>= {<italic>a</italic><sub><italic>i</italic>, <italic>j</italic></sub>}.</p><p><bold>Algorithm 2 </bold>Transition Coefficient(<bold><italic>S</italic></bold><sub><italic>i</italic></sub>, <bold><italic>S</italic></bold><sub><italic>j</italic></sub>, <italic>R</italic><sub><italic>k</italic></sub>)</p><p>Read in reaction rate parameters for <italic>R</italic><sub><italic>k</italic></sub></p><p>Retrieve the copy numbers of molecular species occurring in the reaction formula of <italic>R</italic><sub><italic>k </italic></sub>from the state vector <bold><italic>S</italic></bold><sub><italic>i</italic></sub></p><p>Compute the combination copy numbers of each reactant molecular species</p><p>Compute transition coefficient <italic>a</italic><sub><italic>i</italic>, <italic>j </italic></sub>based on the reaction rate parameters for <italic>R</italic><sub><italic>k</italic></sub>, and the combination copy numbers.</p><p>Output <italic>a</italic><sub><italic>i</italic>, <italic>j</italic></sub>.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>We thank Drs. Bhaskar DasGupta, Ming Lin, Michael Samoilov, and Hsiao-Mei Lu for helpful discussions. This work is supported by a phase II 985 Project (Sub-Project:T226208001) at Shanghai Jiao Tong University, Shanghai, China.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>McAdams</surname><given-names>HH</given-names></name><name><surname>Arkin</surname><given-names>A</given-names></name></person-group><article-title>Stochastic mechanisms in gene expression</article-title><source>Proc Natl Acad Sci USA</source><year>1997</year><volume>94</volume><fpage>814</fpage><lpage>819</lpage><pub-id pub-id-type="pmid">9023339</pub-id><pub-id pub-id-type="doi">10.1073/pnas.94.3.814</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Arkin</surname><given-names>A</given-names></name><name><surname>Ross</surname><given-names>J</given-names></name><name><surname>McAdams</surname><given-names>HH</given-names></name></person-group><article-title>Stochastic kinetic analysis of developmental pathway bifurcation in phage lambda-infected Escherichia coli cells</article-title><source>Genetics</source><year>1998</year><volume>149</volume><fpage>1633</fpage><lpage>1648</lpage><pub-id pub-id-type="pmid">9691025</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hasty</surname><given-names>J</given-names></name><name><surname>Pradines</surname><given-names>J</given-names></name><name><surname>Dolnik</surname><given-names>M</given-names></name><name><surname>Collins</surname><given-names>JJ</given-names></name></person-group><article-title>Noise-based switches and amplifiers for gene expression</article-title><source>Proc Natl Acad Sci USA</source><year>2000</year><volume>97</volume><fpage>2075</fpage><lpage>80</lpage><pub-id pub-id-type="pmid">10681449</pub-id><pub-id pub-id-type="doi">10.1073/pnas.040411297</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ozbudak</surname><given-names>EM</given-names></name><name><surname>Thattai</surname><given-names>M</given-names></name><name><surname>Kurtser</surname><given-names>I</given-names></name><name><surname>Grossman</surname><given-names>AD</given-names></name><name><surname>van Oudenaarden</surname><given-names>A</given-names></name></person-group><article-title>Regulation of noise in the expression of a single gene</article-title><source>Nat Genet</source><year>2002</year><volume>31</volume><fpage>69</fpage><lpage>73</lpage><pub-id pub-id-type="pmid">11967532</pub-id><pub-id pub-id-type="doi">10.1038/ng869</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Levin</surname><given-names>MD</given-names></name></person-group><article-title>Noise in gene expression as the source of non-genetic individuality in the chemotactic response of Escherichia coli</article-title><source>FEBS Lett</source><year>2003</year><volume>550</volume><fpage>135</fpage><lpage>138</lpage><pub-id pub-id-type="pmid">12935899</pub-id><pub-id pub-id-type="doi">10.1016/S0014-5793(03)00857-3</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Morishita</surname><given-names>Y</given-names></name><name><surname>Aihara</surname><given-names>K</given-names></name></person-group><article-title>Noise-reduction through interaction in gene expression and biochemical reaction processes</article-title><source>J Theor Biol</source><year>2004</year><volume>228</volume><fpage>315</fpage><lpage>325</lpage><pub-id pub-id-type="pmid">15135030</pub-id><pub-id pub-id-type="doi">10.1016/j.jtbi.2004.01.007</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Paulsson</surname><given-names>J</given-names></name><name><surname>Ehrenberg</surname><given-names>M</given-names></name></person-group><article-title>Random signal fluctuations can reduce random fluctuations in regulated components of chemical regulatory networks</article-title><source>Phys Rev Lett</source><year>2000</year><volume>84</volume><fpage>5447</fpage><lpage>5450</lpage><pub-id pub-id-type="pmid">10990965</pub-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.84.5447</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kepler</surname><given-names>T</given-names></name><name><surname>Elston</surname><given-names>T</given-names></name></person-group><article-title>Stochasticity in transcriptional regulation: origins, consequences, and mathematical representations</article-title><source>Biophys J</source><year>2001</year><volume>81</volume><fpage>3116</fpage><lpage>3136</lpage><pub-id pub-id-type="pmid">11720979</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Zhou</surname><given-names>T</given-names></name><name><surname>Chen</surname><given-names>L</given-names></name><name><surname>Aihara</surname><given-names>K</given-names></name></person-group><article-title>Molecular communication through stochastic synchronization induced by extracellular fluctuations</article-title><source>Phys Rev Lett</source><year>2005</year><volume>95</volume><fpage>178103</fpage><pub-id pub-id-type="pmid">16383875</pub-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.95.178103</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Samoilov</surname><given-names>M</given-names></name><name><surname>Plyasunov</surname><given-names>S</given-names></name><name><surname>Arkin</surname><given-names>A</given-names></name></person-group><article-title>Stochastic amplification and signaling in enzymatic futile cycles through noise-induced bistability with oscillations</article-title><source>Proc Natl Acad Sci USA</source><year>2005</year><volume>102</volume><fpage>2310</fpage><lpage>2315</lpage><pub-id pub-id-type="pmid">15701703</pub-id><pub-id pub-id-type="doi">10.1073/pnas.0406841102</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Volfson</surname><given-names>D</given-names></name><name><surname>Marciniak</surname><given-names>J</given-names></name><name><surname>Blake</surname><given-names>WJ</given-names></name><name><surname>Ostroff</surname><given-names>N</given-names></name><name><surname>Tsimring</surname><given-names>LS</given-names></name><name><surname>Hasty</surname><given-names>J</given-names></name></person-group><article-title>Origins of extrinsic variability in eukaryotic gene expression</article-title><source>Nature</source><year>2006</year><volume>439</volume><fpage>861</fpage><lpage>864</lpage><pub-id pub-id-type="pmid">16372021</pub-id><pub-id pub-id-type="doi">10.1038/nature04281</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mettetal</surname><given-names>JT</given-names></name><name><surname>Muzzey</surname><given-names>D</given-names></name><name><surname>Pedraza</surname><given-names>JM</given-names></name><name><surname>Ozbudak</surname><given-names>EM</given-names></name><name><surname>van Oudenaarden</surname><given-names>A</given-names></name></person-group><article-title>Predicting stochastic gene expression dynamics in single cells</article-title><source>Proc Natl Acad Sci USA</source><year>2006</year><volume>103</volume><fpage>7304</fpage><lpage>7309</lpage><pub-id pub-id-type="pmid">16648266</pub-id><pub-id pub-id-type="doi">10.1073/pnas.0509874103</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Morishita</surname><given-names>Y</given-names></name><name><surname>Kobayashi</surname><given-names>TJ</given-names></name><name><surname>Aihara</surname><given-names>K</given-names></name></person-group><article-title>An optimal number of molecules for signal amplification and discrimination in a chemical cascade</article-title><source>Biophys J</source><year>2006</year><volume>91</volume><fpage>2072</fpage><lpage>2081</lpage><pub-id pub-id-type="pmid">16798800</pub-id><pub-id pub-id-type="doi">10.1529/biophysj.105.070797</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gillespie</surname><given-names>DT</given-names></name></person-group><article-title>Exact stochastic simulation of coupled chemical reactions</article-title><source>Journal of Physical Chemistry</source><year>1977</year><volume>81</volume><fpage>2340</fpage><lpage>2361</lpage><pub-id pub-id-type="doi">10.1021/j100540a008</pub-id></citation></ref><ref id="B15"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Van Kampen</surname><given-names>NG</given-names></name></person-group><source>Stochastic processes in physics and chemistry</source><year>1992</year><publisher-name>Amsterdam: North Holland</publisher-name></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ao</surname><given-names>P</given-names></name><name><surname>Kown</surname><given-names>C</given-names></name><name><surname>Qian</surname><given-names>H</given-names></name></person-group><article-title>On the existence of potential landscape in the evolution of complex systems</article-title><source>Complexity</source><year>2007</year><volume>12</volume><fpage>19</fpage><lpage>27</lpage><pub-id pub-id-type="doi">10.1002/cplx.20171</pub-id></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>KY</given-names></name><name><surname>Wang</surname><given-names>J</given-names></name></person-group><article-title>Potential energy landscape and robustness of a gene regulatory network: toggle switch</article-title><source>PLoS Comput Biol</source><year>2007</year><volume>3</volume><fpage>e60</fpage><pub-id pub-id-type="pmid">17397255</pub-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.0030060</pub-id></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schultz</surname><given-names>D</given-names></name><name><surname>Onuchic</surname><given-names>JN</given-names></name><name><surname>Wolynes</surname><given-names>PG</given-names></name></person-group><article-title>Understanding stochastic simulations of the smallest genetic networks</article-title><source>J Chem Phys</source><year>2007</year><volume>126</volume><fpage>245102</fpage><pub-id pub-id-type="pmid">17614590</pub-id><pub-id pub-id-type="doi">10.1063/1.2741544</pub-id></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hornos</surname><given-names>JE</given-names></name><name><surname>Schultz</surname><given-names>D</given-names></name><name><surname>Innocentini</surname><given-names>GC</given-names></name><name><surname>Wang</surname><given-names>J</given-names></name><name><surname>Walczak</surname><given-names>AM</given-names></name><name><surname>Onuchic</surname><given-names>JN</given-names></name><name><surname>Wolynes</surname><given-names>PG</given-names></name></person-group><article-title>Self-regulating gene: an exact solution</article-title><source>Phys Rev E Stat Nonlin Soft Matter Phys</source><year>2005</year><volume>72</volume><fpage>051907</fpage><pub-id pub-id-type="pmid">16383645</pub-id></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gillespie</surname><given-names>DT</given-names></name><name><surname>Petzold</surname><given-names>LR</given-names></name></person-group><article-title>Improved leap-size selection for accelerated stochastic simulation</article-title><source>The Journal of Chemical Physics</source><year>2003</year><volume>119</volume><fpage>8229</fpage><lpage>8234</lpage><pub-id pub-id-type="doi">10.1063/1.1613254</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Cao</surname><given-names>Y</given-names></name><name><surname>Li</surname><given-names>H</given-names></name><name><surname>Petzold</surname><given-names>L</given-names></name></person-group><article-title>Efficient formulation of the stochastic simulation algorithm for chemically reacting systems</article-title><source>The Journal of Chemical Physics</source><year>2004</year><volume>121</volume><fpage>4059</fpage><lpage>4067</lpage><pub-id pub-id-type="pmid">15332951</pub-id><pub-id pub-id-type="doi">10.1063/1.1778376</pub-id></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Munsky</surname><given-names>B</given-names></name><name><surname>Khammash</surname><given-names>M</given-names></name></person-group><article-title>The finite state projection algorithm for the solution of the chemical master equation</article-title><source>The Journal of Chemical Physics</source><year>2006</year><volume>124</volume><fpage>044104</fpage><pub-id pub-id-type="pmid">16460146</pub-id><pub-id pub-id-type="doi">10.1063/1.2145882</pub-id></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Samant</surname><given-names>A</given-names></name><name><surname>Vlachos</surname><given-names>D</given-names></name></person-group><article-title>Overcoming stiffness in stochastic simulation stemming from partial equilibrium: a multiscale Monte Carlo algorithm</article-title><source>J Chem Phys</source><year>2005</year><volume>123</volume><fpage>144114</fpage><pub-id pub-id-type="pmid">16238381</pub-id><pub-id pub-id-type="doi">10.1063/1.2046628</pub-id></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>XM</given-names></name><name><surname>Yin</surname><given-names>L</given-names></name><name><surname>Hood</surname><given-names>L</given-names></name><name><surname>Ao</surname><given-names>P</given-names></name></person-group><article-title>Robustness, stability and efficiency of phage lambda genetic switch: dynamical structure analysis</article-title><source>J Bioinform Comput Biol</source><year>2004</year><volume>2</volume><fpage>785</fpage><lpage>817</lpage><pub-id pub-id-type="pmid">15617166</pub-id><pub-id pub-id-type="doi">10.1142/S0219720004000946</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Salis</surname><given-names>H</given-names></name><name><surname>Kaznessis</surname><given-names>Y</given-names></name></person-group><article-title>Accurate hybrid stochastic simulation of a system of coupled chemical or biochemical reactions</article-title><source>The Journal of Chemical Physics</source><year>2005</year><volume>122</volume><fpage>054103</fpage><pub-id pub-id-type="doi">10.1063/1.1835951</pub-id></citation></ref><ref id="B26"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Markevich</surname><given-names>NI</given-names></name><name><surname>Hoek</surname><given-names>JB</given-names></name><name><surname>Kholodenko</surname><given-names>BN</given-names></name></person-group><article-title>Signaling switches and bistability arising from multisite phosphorylation in protein kinase cascades</article-title><source>J Cell Biol</source><year>2004</year><volume>164</volume><fpage>353</fpage><lpage>359</lpage><pub-id pub-id-type="pmid">14744999</pub-id><pub-id pub-id-type="doi">10.1083/jcb.200308060</pub-id></citation></ref><ref id="B27"><citation citation-type="other"><article-title>BioModels</article-title><ext-link ext-link-type="uri" xlink:href="http://www.ebi.ac.uk/biomodels"/><comment>EBI 2008</comment></citation></ref><ref id="B28"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Hill</surname><given-names>TL</given-names></name></person-group><source>Statistical Mechanics: Principles and Applications</source><year>1987</year><publisher-name>Dover</publisher-name></citation></ref><ref id="B29"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Dill</surname><given-names>KA</given-names></name></person-group><article-title>Dominant forces in protein folding</article-title><source>Biochemistry</source><year>1990</year><volume>29</volume><fpage>7133</fpage><lpage>7155</lpage><pub-id pub-id-type="pmid">2207096</pub-id><pub-id pub-id-type="doi">10.1021/bi00483a001</pub-id></citation></ref><ref id="B30"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Socci</surname><given-names>ND</given-names></name><name><surname>Onuchic</surname><given-names>JN</given-names></name></person-group><article-title>Folding kinetics of proteinlike heteropolymer</article-title><source>J Chem Phys</source><year>1994</year><volume>101</volume><fpage>1519</fpage><lpage>1528</lpage><pub-id pub-id-type="doi">10.1063/1.467775</pub-id></citation></ref><ref id="B31"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sali</surname><given-names>A</given-names></name><name><surname>Shakhnovich</surname><given-names>EI</given-names></name><name><surname>Karplus</surname><given-names>M</given-names></name></person-group><article-title>How does a protein fold?</article-title><source>Nature</source><year>1994</year><volume>369</volume><fpage>248</fpage><lpage>251</lpage><pub-id pub-id-type="pmid">7710478</pub-id><pub-id pub-id-type="doi">10.1038/369248a0</pub-id></citation></ref><ref id="B32"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Dill</surname><given-names>KA</given-names></name><name><surname>Bromberg</surname><given-names>S</given-names></name><name><surname>Yue</surname><given-names>K</given-names></name><name><surname>Fiebig</surname><given-names>KM</given-names></name><name><surname>Yee</surname><given-names>DP</given-names></name><name><surname>Thomas</surname><given-names>PD</given-names></name><name><surname>Chan</surname><given-names>HS</given-names></name></person-group><article-title>Principles of protein-folding &#x02013; a perspective from simple exact models. Protein</article-title><source>Science</source><year>1995</year><volume>4</volume><fpage>561</fpage><lpage>602</lpage></citation></ref><ref id="B33"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Klimov</surname><given-names>DK</given-names></name><name><surname>Thirumalai</surname><given-names>D</given-names></name></person-group><article-title>Criterion that determines the foldability of proteins</article-title><source>Phys Rev Lett</source><year>1996</year><volume>76</volume><fpage>4070</fpage><lpage>4073</lpage><pub-id pub-id-type="pmid">10061184</pub-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.76.4070</pub-id></citation></ref><ref id="B34"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Shakhnovich</surname><given-names>EI</given-names></name></person-group><article-title>Protein Design: a Perspective From Simple Tractable Models</article-title><source>Folding &#x00026; Design</source><year>1998</year><volume>3</volume><fpage>R45</fpage><lpage>R58</lpage><pub-id pub-id-type="doi">10.1016/S1359-0278(98)00021-2</pub-id></citation></ref><ref id="B35"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ozkan</surname><given-names>SB</given-names></name><name><surname>Bahar</surname><given-names>I</given-names></name><name><surname>Dill</surname><given-names>KA</given-names></name></person-group><article-title>Transition States and the Meaning of <italic>&#x003c6;</italic>-Values in Protein Folding Kinetics</article-title><source>Folding &#x00026; Design</source><year>1998</year><volume>3</volume><fpage>R45</fpage><lpage>R58</lpage><pub-id pub-id-type="doi">10.1016/S1359-0278(98)00021-2</pub-id></citation></ref><ref id="B36"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kachalo</surname><given-names>S</given-names></name><name><surname>Lu</surname><given-names>H</given-names></name><name><surname>Liang</surname><given-names>J</given-names></name></person-group><article-title>Protein folding dynamics via quantification of kinematic energy landscape</article-title><source>Phys Rev Lett</source><year>2006</year><volume>96</volume><fpage>058106</fpage><pub-id pub-id-type="pmid">16487000</pub-id><pub-id pub-id-type="doi">10.1103/PhysRevLett.96.058106</pub-id></citation></ref><ref id="B37"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Little</surname><given-names>J</given-names></name><name><surname>Shepley</surname><given-names>D</given-names></name><name><surname>Wert</surname><given-names>D</given-names></name></person-group><article-title>Robustness of a gene regulatory circuit</article-title><source>EMBO J</source><year>1999</year><volume>18</volume><fpage>4299</fpage><lpage>4307</lpage><pub-id pub-id-type="pmid">10428968</pub-id><pub-id pub-id-type="doi">10.1093/emboj/18.15.4299</pub-id></citation></ref><ref id="B38"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>M</given-names></name><name><surname>McClure</surname><given-names>W</given-names></name><name><surname>Susskind</surname><given-names>M</given-names></name></person-group><article-title>Changing the mechanism of transcriptional activation by phage lambda repressor</article-title><source>Proc Natl Acad Sci USA</source><year>1997</year><volume>94</volume><fpage>3691</fpage><lpage>3696</lpage><pub-id pub-id-type="pmid">9108039</pub-id><pub-id pub-id-type="doi">10.1073/pnas.94.8.3691</pub-id></citation></ref><ref id="B39"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hawley</surname><given-names>D</given-names></name><name><surname>McClure</surname><given-names>W</given-names></name></person-group><article-title>In vitro comparison of initiation properties of bacteriophage lambda wild-type PR and x3 mutant promoters</article-title><source>Proc Natl Acad Sci USA</source><year>1980</year><volume>77</volume><fpage>6381</fpage><lpage>6385</lpage><pub-id pub-id-type="pmid">6450417</pub-id><pub-id pub-id-type="doi">10.1073/pnas.77.11.6381</pub-id></citation></ref><ref id="B40"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hawley</surname><given-names>D</given-names></name><name><surname>McClure</surname><given-names>W</given-names></name></person-group><article-title>Mechanism of activation of transcription initiation from the lambda PRM promoter</article-title><source>J Mol Biol</source><year>1982</year><volume>157</volume><fpage>493</fpage><lpage>525</lpage><pub-id pub-id-type="pmid">6214638</pub-id><pub-id pub-id-type="doi">10.1016/0022-2836(82)90473-9</pub-id></citation></ref><ref id="B41"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Cormen</surname><given-names>TH</given-names></name><name><surname>Leiserson</surname><given-names>CE</given-names></name><name><surname>Rivest</surname><given-names>RL</given-names></name></person-group><source>Introduction to algorithms</source><year>1990</year><publisher-name>Cambridge, MA: The MIT Press</publisher-name></citation></ref><ref id="B42"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Lehoucq</surname><given-names>R</given-names></name><name><surname>Sorensen</surname><given-names>D</given-names></name><name><surname>Yang</surname><given-names>C</given-names></name></person-group><source>Arpack users' guide: Solution of large scale eigenvalue problems with implicitly restarted Arnoldi methods</source><year>1998</year><publisher-name>Philadelphia: SIAM</publisher-name></citation></ref></ref-list></back></article>


