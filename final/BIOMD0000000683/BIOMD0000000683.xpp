
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Wodarz1999 - Cytotoxic T lymphocyte memory response to HIV infection
#
# is http://identifiers.org/biomodels.db/MODEL1006230062
# is http://identifiers.org/biomodels.db/BIOMD0000000683
# isDescribedBy http://identifiers.org/pubmed/10588728
# is http://identifiers.org/biomodels.db/MODEL1006230062
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = COMpartment, name = Patient, constant
par COMpartme=1.0

# Parameter:   id =  x, name = x, defined by a Rule

# Parameter:   id =  lamda, name = lamda, constant
par lamda=1.0

# Parameter:   id =  d, name = d, constant
par d=0.1

# Parameter:   id =  y, name = y, defined by a Rule

# Parameter:   id =  a, name = a, constant
par a=0.2

# Parameter:   id =  log_y, name = log_y, defined by a Rule

# Parameter:   id =  w, name = w, defined by a Rule

# Parameter:   id =  b, name = b, constant
par b=0.01

# Parameter:   id =  log_w, name = log_w, defined by a Rule

# Parameter:   id =  z, name = z, defined by a Rule

# Parameter:   id =  h, name = h, constant
par h=0.1

# Parameter:   id =  beta, name = beta, constant
par beta=1.5

# Parameter:   id =  p, name = p, constant
par p=1.0

# Parameter:   id =  q, name = q, constant
par q=0.5

# Parameter:   id =  c, name = c, constant
par c=0.1

# Parameter:   id =  s, name = s, defined by a Rule

# assignmentRule: variable = log_y
log_y=log(10, y*1)/log(10, 10)
aux log_y=log_y

# assignmentRule: variable = log_w
log_w=log(10, w*1)/log(10, 10)
aux log_w=log_w

# assignmentRule: variable = s
s= piecew2 
aux s=s

# rateRule: variable = x
init x=10.0
dx/dt=lamda-(d*x+s*beta*x*y)

# rateRule: variable = y
init y=0.1
dy/dt=s*beta*x*y-(a*y+p*y*z)

# rateRule: variable = w
init w=0.001
dw/dt=c*x*y*w-(c*q*y*w+b*w)

# rateRule: variable = z
init z=0.0
dz/dt=c*q*y*w-h*z


# Piecewise functions : the mathML piecewise element is transformed into if/then/else expression

piecew1=if (t  >  15) then (1) else (0.0042)

piecew2=if (t  <  1) then (1) else ( piecew1 )


@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

